#task 2

import requests

def fetch_pokemon_data(pokemon_name):
    # API endpoint for the given Pokémon
    url = f"https://pokeapi.co/api/v2/pokemon/{pokemon_name}"
    
    # Make a GET request to the API
    response = requests.get(url)
    
    # Check if the request was successful
    if response.status_code == 200:
        # Extract data from the JSON response
        data = response.json()
        return data
    else:
        print(f"Failed to fetch data for {pokemon_name} from the Pokémon API.")
        return None

def calculate_average_weight(pokemon_list):
    total_weight = 0
    for pokemon in pokemon_list:
        weight = pokemon['weight']
        total_weight += weight
    average_weight = total_weight / len(pokemon_list)
    return average_weight

pokemon_names = ["pikachu", "bulbasaur", "charmander"]
pokemon_data = []

# Fetch data for each Pokémon
for name in pokemon_names:
    data = fetch_pokemon_data(name)
    if data:
        pokemon_data.append(data)

# Print names, abilities, and average weight
print("Pokémon Data:")
for pokemon in pokemon_data:
    name = pokemon['name'].capitalize()
    abilities = [ability['ability']['name'].capitalize() for ability in pokemon['abilities']]
    print(f"\nName: {name}")
    print("Abilities:")
    for ability in abilities:
        print(f"- {ability}")
    print(f"Weight: {pokemon['weight']}")

# Calculate and print average weight
average_weight = calculate_average_weight(pokemon_data)
print(f"\nAverage Weight of the Pokémon: {average_weight}")
